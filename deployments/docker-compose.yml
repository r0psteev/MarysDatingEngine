#
## Rabbit
#docker run -d --name some-rabbit -e RABBITMQ_DEFAULT_USER=guest -e RABBITMQ_DEFAULT_PASS=guest -p 5672:5672 -p 15672:15672 rabbitmq:3-management
#
## Neo4j
#docker run \
#    --name testneo4j \
#    -p7474:7474 -p7687:7687 \
#    -d \
#    -v $HOME/neo4j/data:/data \
#    -v $HOME/neo4j/logs:/logs \
#    -v $HOME/neo4j/import:/var/lib/neo4j/import \
#    -v $HOME/neo4j/plugins:/plugins \
#    --env NEO4J_AUTH=neo4j/password1234 \
#    neo4j:latest
#
##
#
version: "3.9"
services:
  rabbitmq:
    build: ./rabbitmq
    ports:
      # make the rabbitmq mgt web accessible from host
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      # check if rabbitmq service is already available
      test: ["CMD", "nc", "-zvv", "localhost", "5672"]
      interval: 10s
      timeout: 2m
      retries: 5
      start_period: 30s
    volumes:
      # important directories concerning rabbitmq
      - "rabbitvol:/var/lib/rabbitmq/"
  neo4j:
    build: ./neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    healthcheck:
      # check if neo4j service is already available
      test: ["CMD", "nc", "-zvv", "localhost", "7687"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    volumes:
      - "neo-data-vol:/data"
      - "neo-logs-vol:/logs"
      - "neo-plugins-vol:/plugins"
      - "neo-import-vol:/var/lib/neo4j/import"
  seeder:
    build: ./seeder
    environment:
      # this one is differnt from the docker-compose .env file
      # because it sets the environments within the containers themselves
      # and not just env vars for the docker-compose build process
      - AMQ_HOST=rabbitmq
      - AMQ_PORT=5672
      - AMQ_USERNAME=guest
      - AMQ_PASSWORD=guest
      - AMQ_TASK_QUEUE=""
      - AMQ_OUTPUT_QUEUE=DatesLinkerQueue
    depends_on:
      rabbitmq:
        # i guess the healthiness is enforced by the healthcheck
        # specified for the service above.
        condition: service_healthy
  consumer:
    build: ./consumer
    environment:
      # this one is differnt from the docker-compose .env file
      # because it sets the environments within the containers themselves
      # and not just env vars for the docker-compose build process
      - AMQ_HOST=rabbitmq
      - AMQ_PORT=5672
      - AMQ_USERNAME=guest
      - AMQ_PASSWORD=guest
      - AMQ_TASK_QUEUE=DatesLinkerQueue
      - AMQ_OUTPUT_QUEUE=""
      - NEO4J_HOST=neo4j
      - NEO4J_PORT=7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=password1234
    depends_on:
      rabbitmq:
        # i guess the healthiness is enforced by the healthcheck
        # specified for the service above.
        condition: service_healthy

volumes:
  rabbitvol:
    name: "rabbitvol"
    driver: "vieux/sshfs:latest"
    # driver specific options
    driver_opts:
      sshcmd: "rabbitmq@${SSHFS_HOST}:/mnt/docker/rabbitmq"
      password: "${SSHFS_RABBIT_PASSWORD}"
      allow_other: ""
  neo-data-vol:
    name: "neo-data-vol"
    driver: "vieux/sshfs:latest"
    # driver specific options
    driver_opts:
      sshcmd: "neo4j@${SSHFS_HOST}:/mnt/docker/neo4j/data"
      password: "${SSHFS_NEO4J_PASSWORD}"
      allow_other: ""
  neo-logs-vol:
    name: "neo-logs-vol"
    driver: "vieux/sshfs:latest"
    # driver specific options
    driver_opts:
      sshcmd: "neo4j@${SSHFS_HOST}:/mnt/docker/neo4j/logs"
      password: "${SSHFS_NEO4J_PASSWORD}"
      allow_other: ""
  neo-plugins-vol:
    name: "neo-plugins-vol"
    driver: "vieux/sshfs:latest"
    # driver specific options
    driver_opts:
      sshcmd: "neo4j@${SSHFS_HOST}:/mnt/docker/neo4j/plugins"
      password: "${SSHFS_NEO4J_PASSWORD}"
      allow_other: ""
  neo-import-vol:
    name: "neo-import-vol"
    driver: "vieux/sshfs:latest"
    # driver specific options
    driver_opts:
      sshcmd: "neo4j@${SSHFS_HOST}:/mnt/docker/neo4j/import"
      password: "${SSHFS_NEO4J_PASSWORD}"
      allow_other: ""